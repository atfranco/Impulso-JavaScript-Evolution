{"ast":null,"code":"var _jsxFileName = \"C:\\\\trabalhos\\\\cursos\\\\DIO.ME\\\\Bootcamps\\\\Impulso Javascript Evolution\\\\frontend\\\\src\\\\Pages\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Paper, Grid, Typography, List, makeStyles } from '@material-ui/core/';\nimport Item from '../components/Item';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '5px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  }\n}));\n\nconst HomePage = () => {\n  _s();\n\n  const products = useSelector(state => state.products);\n  const classes = useStyles();\n  const categorys = products.map(category => {\n    const container = {};\n    container['id'] = category.id_categorys;\n    container['name'] = category.name_categorys;\n    return container;\n  });\n  const category = categorys.map(JSON.stringify).filter(function (item, index, arr) {\n    return arr.indexOf(item, index + 1) === -1;\n  }).map(JSON.parse);\n  const arrayCategory = categorys.map(category => category.name);\n  let count = {};\n\n  for (let i = 0; i < arrayCategory.length; i++) {\n    {\n      let key = arrayCategory[i];\n      count[key] = count[key] ? count[key] + 1 : 1;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"left\",\n          color: \"blue\",\n          children: \"Categorias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: category.map(category => {\n            return /*#__PURE__*/_jsxDEV(Item, {\n              name: category.name,\n              details: count[category.name]\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 9,\n      spacing: 3,\n      className: classes.root,\n      children: products.map(item => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          product: item,\n          children: item.name_product\n        }, item.id_product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"mDEH5rarcoZmLFCAQMs19Heafl0=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/trabalhos/cursos/DIO.ME/Bootcamps/Impulso Javascript Evolution/frontend/src/Pages/home.js"],"names":["React","useSelector","Paper","Grid","Typography","List","makeStyles","Item","Card","useStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","HomePage","products","state","classes","categorys","map","category","container","id_categorys","name_categorys","JSON","stringify","filter","item","index","arr","indexOf","parse","arrayCategory","name","count","i","length","key","id","name_product","id_product"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Paper, Grid, Typography, List, makeStyles } from '@material-ui/core/';\r\nimport Item from '../components/Item';\r\nimport Card from '../components/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: '5px',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center'\r\n    },\r\n  }));\r\n\r\nconst HomePage = () => {\r\n    const products = useSelector(state => state.products)\r\n    const classes = useStyles();\r\n\r\n    const categorys = products.map(\r\n        category => {\r\n            const container = { };\r\n            container['id'] = category.id_categorys;\r\n            container['name'] = category.name_categorys;\r\n            return container;\r\n        }\r\n    )\r\n\r\n    const category = categorys.map(JSON.stringify)\r\n                    .filter(function(item, index, arr){\r\n                        return arr.indexOf(item, index + 1) === -1;\r\n                    })\r\n                    .map(JSON.parse)\r\n\r\n    const arrayCategory = categorys.map(category => category.name)\r\n    let count = { };\r\n\r\n    for(let i = 0; i < arrayCategory.length; i++){\r\n        {\r\n            let key = arrayCategory[i];\r\n            count[key] = (count[key] ? count[key] + 1 : 1)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Grid container spacing={3} className={classes.root}>\r\n            <Grid item xs={3}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h5' align=\"left\" color=\"blue\">\r\n                        Categorias\r\n                    </Typography>\r\n                    <List>\r\n                        {category.map(\r\n                            category => {\r\n                                return (\r\n                                    <Item\r\n                                        key = {category.id} \r\n                                        name= {category.name}\r\n                                        details={count[category.name]}\r\n                                    />\r\n                                )\r\n                            }\r\n                        )}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid container xs={9} spacing={3} className={classes.root}>\r\n                {products.map(item => {\r\n                    return(\r\n                        <Card\r\n                            key={item.id_product}\r\n                            product={item}\r\n                        >\r\n                            {item.name_product}\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}